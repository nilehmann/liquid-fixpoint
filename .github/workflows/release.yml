name: Build and release

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  build_artifact:
    strategy:
      matrix:
          os: [ubuntu-latest, macOS-latest, windows-latest]
          ghc: ["9.2.3"]
          cabal: ["3.6"]
          z3: ["4.10.2"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Setup GHC and cabal-install
        uses: haskell/actions/setup@v2
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Setup z3-${{ matrix.z3 }}
        uses: cda-tum/setup-z3@v1.1.1
        with:
          version: ${{ matrix.z3 }}        
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Freeze
        run: |
          cabal freeze
          
      - name: Cache ~/.cabal/store
        uses: actions/cache@v3.2.3
        with:
          path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Build binary
        run: |
          mkdir dist
          cabal install exe:fixpoint --install-method=copy --overwrite-policy=always --installdir=dist --enable-split-sections
      
      - if: matrix.os == 'windows-latest'
        name: Set extension to .exe on Windows
        run: echo "EXT=.exe" >> "$GITHUB_ENV"

      - name: Set binary path name
        run: echo "BINARY_PATH=./dist/stan${{ env.EXT }}" >> "$GITHUB_ENV"

      - name: Compress binary
        uses: svenstaro/upx-action@2.0.1
        with:
          file: ${{ env.BINARY_PATH }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist-${{ matrix.os }}
          path: ./dist
